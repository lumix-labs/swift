name: 'Create Docker Compose File'
description: 'Creates a docker-compose.yml file based on modules to deploy'

inputs:
  registry:
    description: 'ECR registry URL'
    required: true
  modules_to_deploy:
    description: 'Comma-separated list of modules to deploy'
    required: true

runs:
  using: "composite"
  steps:
    - name: Create docker-compose file
      shell: bash
      run: |
        mkdir -p deploy
        
        # Create basic docker-compose.yml structure
        cat > deploy/docker-compose.yml << EOL
version: '3.8'

services:
EOL
        
        # Convert comma-separated modules to array
        IFS=',' read -ra MODULES <<< "${{ inputs.modules_to_deploy }}"
        
        TEMPLATE_FILE="${GITHUB_WORKSPACE}/.github/workflows/deploy/templates/docker-compose-template.yml"
        
        # Add each requested module to docker-compose
        for MODULE in "${MODULES[@]}"; do
          # Extract the service definition from the template
          if [[ "$MODULE" == "api" ]]; then
            SERVICE_CONTENT=$(sed -n '/^  api:/,/^  [a-z]/p' "$TEMPLATE_FILE" | head -n -1 | sed "s|\${REGISTRY}|${{ inputs.registry }}|g")
            echo "$SERVICE_CONTENT" >> deploy/docker-compose.yml
          elif [[ "$MODULE" == "web" ]]; then
            SERVICE_CONTENT=$(sed -n '/^  web:/,/^  [a-z]/p' "$TEMPLATE_FILE" | head -n -1 | sed "s|\${REGISTRY}|${{ inputs.registry }}|g")
            echo "$SERVICE_CONTENT" >> deploy/docker-compose.yml
          elif [[ "$MODULE" == "mcp-server" ]]; then
            SERVICE_CONTENT=$(sed -n '/^  mcp-server:/,/^networks:/p' "$TEMPLATE_FILE" | head -n -1 | sed "s|\${REGISTRY}|${{ inputs.registry }}|g")
            echo "$SERVICE_CONTENT" >> deploy/docker-compose.yml
          fi
        done
        
        # Add networks section
        NETWORKS_CONTENT=$(sed -n '/^networks:/,$p' "$TEMPLATE_FILE")
        echo "$NETWORKS_CONTENT" >> deploy/docker-compose.yml