name: Terraform Workflow

on:
  workflow_call:
    inputs:
      action:
        required: true
        type: string
        description: 'Terraform action to perform (plan or apply)'
      modules_to_deploy:
        required: false
        type: string
        description: 'Comma-separated list of modules to deploy'
    outputs:
      deployment_params:
        description: "Deployment parameters as JSON"
        value: ${{ jobs.terraform.outputs.deployment_params }}
    secrets:
      TF_API_TOKEN:
        required: true

jobs:
  terraform:
    name: Terraform ${{ inputs.action }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    outputs:
      deployment_params: ${{ steps.extract-params.outputs.deployment_params }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: inputs.action == 'plan'
        id: plan
        run: terraform plan -out=tfplan

      - name: Save Plan
        if: inputs.action == 'plan'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan
          retention-days: 5

      - name: Download Plan
        if: inputs.action == 'apply'
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: terraform

      - name: Terraform Apply
        if: inputs.action == 'apply'
        run: terraform apply -auto-approve tfplan

      - name: Extract Deployment Parameters
        if: inputs.action == 'apply'
        id: extract-params
        run: |
          # Create a JSON object with deployment parameters
          DEPLOYMENT_PARAMS=$(cat <<EOF
          {
            "instance_ip": "$(terraform output -json instance_public_ip 2>/dev/null | tr -d '"' || echo "")",
            "api_endpoint": "$(terraform output -json api_endpoint 2>/dev/null | tr -d '"' || echo "")",
            "web_endpoint": "$(terraform output -json web_endpoint 2>/dev/null | tr -d '"' || echo "")",
            "modules_to_deploy": "${{ inputs.modules_to_deploy }}"
          }
          EOF
          )
          
          # Escape JSON for GitHub Actions output
          DEPLOYMENT_PARAMS="${DEPLOYMENT_PARAMS//'%'/'%25'}"
          DEPLOYMENT_PARAMS="${DEPLOYMENT_PARAMS//$'\n'/'%0A'}"
          DEPLOYMENT_PARAMS="${DEPLOYMENT_PARAMS//$'\r'/'%0D'}"
          
          echo "deployment_params=${DEPLOYMENT_PARAMS}" >> $GITHUB_OUTPUT
