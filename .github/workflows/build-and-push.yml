name: Build and Deploy Pipeline

on:
  push:
    branches: [master, main, ak] # do not remove ak
    paths:
      - "api/**"
      - "web/**"
      - "terraform/**"
      - ".github/workflows/**"
  workflow_dispatch:
    inputs:
      forceBuildApi:
        description: "Force build of API image"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      forceBuildWeb:
        description: "Force build of Web image"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      forceInfraUpdate:
        description: "Force infrastructure update"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      skipDeployment:
        description: "Skip deployment step"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
  check-changes:
    name: Check Modified Modules
    runs-on: ubuntu-latest
    outputs:
      api_changed: ${{ steps.filter.outputs.api }}
      web_changed: ${{ steps.filter.outputs.web }}
      terraform_changed: ${{ steps.filter.outputs.terraform }}
      modules_to_deploy: ${{ steps.set-modules.outputs.modules_to_deploy }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 50

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            web:
              - 'web/**'
            terraform:
              - 'terraform/**'

      - name: Determine modules to deploy
        id: set-modules
        run: |
          MODULES=()
          
          if [[ "${{ steps.filter.outputs.api }}" == "true" ]]; then
            MODULES+=("api")
          fi
          
          if [[ "${{ steps.filter.outputs.web }}" == "true" ]]; then
            MODULES+=("web")
          fi
          
          # Join array with commas
          if [ ${#MODULES[@]} -gt 0 ]; then
            MODULES_STR=$(IFS=,; echo "${MODULES[*]}")
            echo "modules_to_deploy=${MODULES_STR}" >> $GITHUB_OUTPUT
          else
            echo "modules_to_deploy=" >> $GITHUB_OUTPUT
          fi

  build-api:
    name: Build API Image
    needs: check-changes
    if: |
      (needs.check-changes.outputs.api_changed == 'true') ||
      (github.event.inputs.forceBuildApi == 'true')
    uses: ./.github/workflows/build-module.yml
    with:
      module: api
      repository: lumixlabs/swift-api
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  build-web:
    name: Build Web Image
    needs: check-changes
    if: |
      (needs.check-changes.outputs.web_changed == 'true') ||
      (github.event.inputs.forceBuildWeb == 'true')
    uses: ./.github/workflows/build-module.yml
    with:
      module: web
      repository: lumixlabs/swift-web
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

  terraform-plan:
    name: Terraform Plan
    needs: [check-changes, build-api, build-web]
    if: |
      always() && 
      (needs.check-changes.outputs.modules_to_deploy != '' || 
       needs.check-changes.outputs.terraform_changed == 'true' || 
       github.event.inputs.forceInfraUpdate == 'true')
    uses: ./.github/workflows/terraform-workflow.yml
    with:
      action: plan
      modules_to_deploy: ${{ needs.check-changes.outputs.modules_to_deploy }}
    secrets: inherit

  terraform-apply:
    name: Terraform Apply
    needs: [terraform-plan, check-changes]
    if: |
      always() && 
      (needs.terraform-plan.result == 'success') && 
      (github.event.inputs.skipDeployment != 'true')
    uses: ./.github/workflows/terraform-workflow.yml
    with:
      action: apply
      modules_to_deploy: ${{ needs.check-changes.outputs.modules_to_deploy }}
    secrets: inherit

  deploy:
    name: Deploy Application
    needs: [terraform-apply, check-changes]
    if: |
      always() && 
      (needs.terraform-apply.result == 'success') && 
      (needs.check-changes.outputs.modules_to_deploy != '') && 
      (github.event.inputs.skipDeployment != 'true')
    uses: ./.github/workflows/deploy.yml
    with:
      deploymentParams: ${{ needs.terraform-apply.outputs.deployment_params }}
    secrets: inherit
