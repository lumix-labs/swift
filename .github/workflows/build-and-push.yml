name: Swift CI/CD Pipeline

on:
  push:
    branches: [master, main]
    paths:
      - "api/**"
      - "web/**"
      - "mcp-server/**"
      - "terraform/**"
      - ".github/workflows/**"

jobs:
  check-changes:
    name: Check Modified Modules
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      api_changed: ${{ steps.filter.outputs.api }}
      web_changed: ${{ steps.filter.outputs.web }}
      terraform_changed: ${{ steps.filter.outputs.terraform }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api:
              - 'api/**'
            web:
              - 'web/**'
            terraform:
              - 'terraform/**'

      - name: Output detected changes
        run: |
          echo "Change detection results:"
          echo "API changes: ${{ steps.filter.outputs.api }}"
          echo "Web changes: ${{ steps.filter.outputs.web }}"
          echo "Terraform changes: ${{ steps.filter.outputs.terraform }}"

  build-api:
    name: Build API Image
    needs: check-changes
    if: ${{ needs.check-changes.outputs.api_changed == 'true' }}
    uses: ./.github/workflows/build-module.yml
    with:
      module: api
      repository: lumixlabs/swift-api
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-web:
    name: Build WEB Image
    needs: check-changes
    if: ${{ needs.check-changes.outputs.web_changed == 'true' }}
    uses: ./.github/workflows/build-module.yml
    with:
      module: web
      repository: lumixlabs/swift-web
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-summary:
    name: Summarize Build Results
    needs: [check-changes, build-api, build-web]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Echo build results
        run: |
          echo "Build results:"
          
          # For build-api
          if [[ "${{ needs.check-changes.outputs.api_changed }}" == "true" ]]; then
            echo "API Build: ${{ needs.build-api.result }}"
          else
            echo "API Build: skipped (no changes)"
          fi
          
          # For build-web
          if [[ "${{ needs.check-changes.outputs.web_changed }}" == "true" ]]; then
            echo "Web Build: ${{ needs.build-web.result }}"
          else
            echo "Web Build: skipped (no changes)"
          fi
          
          echo "All builds succeeded, continuing pipeline"

  terraform:
    name: Terraform Operations
    needs: [build-summary]
    if: always()
    uses: ./.github/workflows/terraform-workflow.yml
    with:
      action: plan-apply
    secrets:
      TERRAFORM_API_TOKEN: ${{ secrets.TF_AUTH }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  deploy:
    name: Deploy Application
    needs: [terraform]
    if: always() && needs.terraform.result != 'cancelled'
    uses: ./.github/workflows/deploy.yml
    with:
      infrastructureParams: ${{ needs.terraform.outputs.infrastructure_params || '{}' }}
      modulesToDeploy: "api,web"
    secrets:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CONTAINER_IMAGE_API: ${{ secrets.CONTAINER_IMAGE_API }}
      CONTAINER_IMAGE_WEB: ${{ secrets.CONTAINER_IMAGE_WEB }}

  verify-deployment:
    name: Verify Deployment Status
    needs: [deploy]
    if: always() && needs.deploy.result != 'cancelled'
    runs-on: ubuntu-latest
    steps:
      - name: Check deployment status
        run: |
          if [ "${{ needs.deploy.outputs.deployment_status }}" == "failure" ]; then
            echo "Deployment failed with status: ${{ needs.deploy.outputs.deployment_status }}"
            echo "Please check the deployment logs for more details"
            exit 1
          else
            echo "Deployment completed successfully with status: ${{ needs.deploy.outputs.deployment_status }}"
          fi
